/**
 * FlowGuard SDK - Minified Production Build
 * Professional error tracking and UX monitoring solution
 * @version 1.0.0
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).FlowGuard=t()}(this,function(){"use strict";class ErrorCapture{constructor(e={}){this.config={captureJS:!0,captureNetwork:!0,capturePromise:!0,captureForm:!0,debug:!1,...e},this.callbacks=[],this.isActive=!1}onError(e){this.callbacks.push(e)}emitError(e){this.callbacks.forEach(t=>{try{t(e)}catch(e){console.error("FlowGuard: Error in callback",e)}})}start(){this.isActive||(this.isActive=!0,this.config.captureJS&&this.setupJavaScriptErrorCapture(),this.config.captureNetwork&&this.setupNetworkErrorCapture(),this.config.capturePromise&&this.setupPromiseRejectionCapture(),this.config.captureForm&&this.setupFormAbandonmentCapture())}stop(){this.isActive=!1}setupJavaScriptErrorCapture(){window.addEventListener("error",e=>{this.emitError({type:"JavaScript Error",message:e.message,source:"javascript",url:e.filename||window.location.href,userAgent:navigator.userAgent,stackTrace:e.error?.stack,metadata:{filename:e.filename,lineno:e.lineno,colno:e.colno,timestamp:new Date().toISOString()}})})}setupPromiseRejectionCapture(){window.addEventListener("unhandledrejection",e=>{this.emitError({type:"Promise Rejection",message:e.reason?.message||String(e.reason),source:"promise",url:window.location.href,userAgent:navigator.userAgent,stackTrace:e.reason?.stack,metadata:{reason:e.reason,timestamp:new Date().toISOString()}})})}setupNetworkErrorCapture(){const e=window.fetch;window.fetch=async function(...t){try{const r=await e.apply(this,t);return r.ok||this.emitError({type:"Network Error",message:`HTTP ${r.status}: ${r.statusText}`,source:"fetch",url:t[0],userAgent:navigator.userAgent,metadata:{status:r.status,statusText:r.statusText,timestamp:new Date().toISOString()}}),r}catch(e){throw this.emitError({type:"Network Error",message:e.message,source:"fetch",url:t[0],userAgent:navigator.userAgent,stackTrace:e.stack,metadata:{error:e.name,timestamp:new Date().toISOString()}}),e}}.bind(this)}setupFormAbandonmentCapture(){let e=!1;document.addEventListener("input",()=>{e=!0}),window.addEventListener("beforeunload",t=>{e&&this.emitError({type:"Form Abandonment",message:"User left page with unsaved form data",source:"form",url:window.location.href,userAgent:navigator.userAgent,metadata:{timestamp:new Date().toISOString()}})})}}class Reporter{constructor(e={}){this.config={apiEndpoint:"/api/report",maxRetries:3,retryDelay:1e3,timeout:5e3,useBeacon:!0,...e},this.queue=[],this.isProcessing=!1}async report(e){try{return await this.sendRequest(e)}catch(t){return this.queue.push(e),this.scheduleRetry(e),{success:!1,error:t.message}}}async sendRequest(e,t=0){const r=new AbortController,n=setTimeout(()=>r.abort(),this.config.timeout);try{const n=await fetch(this.config.apiEndpoint,{method:"POST",headers:{"Content-Type":"application/json","X-API-Key":this.config.apiKey||""},body:JSON.stringify(e),signal:r.signal});if(clearTimeout(n),!n.ok)throw new Error(`HTTP ${n.status}: ${n.statusText}`);return await n.json()}catch(r){if(clearTimeout(n),t<this.config.maxRetries)return await this.delay(this.config.retryDelay*(t+1)),this.sendRequest(e,t+1);throw r}}scheduleRetry(e){setTimeout(()=>{this.processQueue()},this.config.retryDelay)}async processQueue(){if(this.isProcessing||0===this.queue.length)return;this.isProcessing=!0;const e=this.queue.shift();try{await this.sendRequest(e),this.queue.length>0&&this.processQueue()}catch(e){console.error("FlowGuard: Failed to process queue",e)}finally{this.isProcessing=!1}}sendBeacon(e){this.config.useBeacon&&navigator.sendBeacon&&navigator.sendBeacon(this.config.apiEndpoint,JSON.stringify(e))}delay(e){return new Promise(t=>setTimeout(t,e))}}class Strategies{constructor(e={}){this.config={enableRetry:!0,enableFallback:!0,maxRetries:3,retryDelay:1e3,...e},this.fallbacks=new Map,this.retryAttempts=new Map}registerFallback(e,t){this.fallbacks.set(e,t)}async executeStrategy(e,t=null){const r=this.determineStrategy(e,t);switch(r){case"retry":return await this.executeRetryStrategy(e);case"fallback":return await this.executeFallbackStrategy(e);case"save":return await this.executeSaveStrategy(e);case"reload":return await this.executeReloadStrategy(e);case"log":default:return await this.executeLogStrategy(e)}}determineStrategy(e,t){return"Network Error"===e.type&&this.isRetryableNetworkError(e)?"retry":"JavaScript Error"===e.type&&this.isCriticalJSError(e)?"reload":"Form Abandonment"===e.type?"save":"log"}async executeRetryStrategy(e){const t=this.generateRetryKey(e),r=this.retryAttempts.get(t)||0;if(r>=this.config.maxRetries)return{success:!1,strategy:"retry",message:"Max retries exceeded"};this.retryAttempts.set(t,r+1);try{return await this.performRetry(e),{success:!0,strategy:"retry",message:"Retry successful"}}catch(e){return{success:!1,strategy:"retry",message:"Retry failed"}}}async performRetry(e){"Network Error"===e.type?await this.retryNetworkRequest(e):"Promise Rejection"===e.type&&await this.retryPromiseOperation(e)}async executeFallbackStrategy(e){"Network Error"===e.type?await this.networkFallback(e):"JavaScript Error"===e.type&&await this.javascriptFallback(e);return{success:!0,strategy:"fallback",message:"Fallback executed"}}async executeSaveStrategy(e){const t=this.extractFormData();return localStorage.setItem("flowguard_saved_data",JSON.stringify({data:t,timestamp:Date.now()})),{success:!0,strategy:"save",message:"Form data saved"}}async executeReloadStrategy(e){return setTimeout(()=>{confirm("An error occurred. Reload the page?")&&window.location.reload()},1e3),{success:!0,strategy:"reload",message:"Reload scheduled"}}async executeLogStrategy(e){return console.warn("FlowGuard:",e.type,e.message),{success:!0,strategy:"log",message:"Error logged"}}isRetryableNetworkError(e){return e.metadata?.status>=500||"fetch"===e.source&&e.message.includes("Failed to fetch")}isCriticalJSError(e){return e.message.includes("Script error")||e.message.includes("ReferenceError")}}class FlowGuard{constructor(){this.config={},this.isInitialized=!1,this.sessionId=this.generateSessionId(),this.context={},this.user=null,this.errorCapture=null,this.reporter=null,this.strategies=null}init(e={}){this.config=this.sanitizeConfig({apiKey:"",apiEndpoint:"/api/report",debug:!1,autoRetry:!0,formTracking:!0,consoleLogging:!1,maxRetries:3,retryDelay:1e3,context:{},...e}),this.initializeModules(),this.setupErrorHandling(),this.setContext("sessionId",this.sessionId),this.setContext("userAgent",navigator.userAgent),this.setContext("url",window.location.href),this.config.context&&Object.keys(this.config.context).forEach(e=>{this.setContext(e,this.config.context[e])}),this.isInitialized=!0,this.config.consoleLogging&&console.log("FlowGuard initialized",this.config),window.dispatchEvent(new CustomEvent("flowguard:initialized",{detail:this.config}))}initializeModules(){this.errorCapture=new ErrorCapture({captureJS:!0,captureNetwork:!0,capturePromise:!0,captureForm:this.config.formTracking,debug:this.config.debug}),this.reporter=new Reporter({apiEndpoint:this.config.apiEndpoint,apiKey:this.config.apiKey,maxRetries:this.config.maxRetries,retryDelay:this.config.retryDelay}),this.strategies=new Strategies({enableRetry:this.config.autoRetry,maxRetries:this.config.maxRetries,retryDelay:this.config.retryDelay})}setupErrorHandling(){this.errorCapture.onError(async e=>{await this.handleError(e)}),this.errorCapture.start()}async handleError(e){const t=this.enrichErrorData(e);this.config.consoleLogging&&console.log("FlowGuard captured error:",t);try{const e=await this.reporter.report(t);this.config.autoRetry&&!e.success&&await this.strategies.executeStrategy(t,e),window.dispatchEvent(new CustomEvent("flowguard:error",{detail:{errorData:t,result:e}}))}catch(e){this.config.consoleLogging&&console.error("FlowGuard: Failed to handle error",e)}}enrichErrorData(e){return{...e,sessionId:this.sessionId,context:this.context,user:this.user,timestamp:new Date().toISOString(),connectionType:this.getConnectionType()}}trackError(e,t="manual",r={}){this.isInitialized&&this.handleError({type:"Manual Error",message:e,source:t,url:window.location.href,userAgent:navigator.userAgent,metadata:r})}trackEvent(e,t={}){this.isInitialized&&this.handleError({type:"Custom Event",message:e,source:"event",url:window.location.href,userAgent:navigator.userAgent,metadata:t})}setUser(e){this.user=e,this.config.consoleLogging&&console.log("FlowGuard user set:",e)}setContext(e,t){this.context[e]=t}setStrategy(e,t){this.strategies&&this.strategies.registerFallback(e,t)}updateConfig(e){this.config={...this.config,...e},this.reporter&&this.reporter.updateConfig(e),this.errorCapture&&this.errorCapture.updateConfig(e),this.strategies&&this.strategies.updateConfig(e)}getStatus(){return{initialized:this.isInitialized,sessionId:this.sessionId,errorCount:this.errorCapture?.errorCount||0,context:this.context,user:this.user}}destroy(){this.errorCapture&&this.errorCapture.stop(),this.isInitialized=!1}generateSessionId(){return Math.random().toString(36).substring(2,15)+Math.random().toString(36).substring(2,15)}getConnectionType(){return navigator.connection?.effectiveType||"unknown"}sanitizeConfig(e){const t={...e};return t.apiKey&&"string"!=typeof t.apiKey&&(console.warn("FlowGuard: API key must be a string"),t.apiKey=""),t}}const flowGuard=new FlowGuard;return"undefined"!=typeof window&&(window.FlowGuard=flowGuard),flowGuard});